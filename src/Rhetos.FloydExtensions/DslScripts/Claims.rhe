Module Floyd
{
	Computed MyClaims
		'(repository) =>
		{
			if (_securityClaims == null)
			{
				var claims = repository.Common.Claim.Load().ToList();
				_securityClaims = claims.Select(c => new Rhetos.Security.Claim(c.ClaimResource, c.ClaimRight)).ToList();
			}
			var authorizations = _executionContext.AuthorizationManager.GetAuthorizations(_securityClaims);
		
			return _securityClaims.Zip(authorizations, (claim, authorized) => new {claim, authorized})
				.Where(x => x.authorized == true)
				.Select(x => 
					new Floyd.MyClaims {
							ClaimResource = x.claim.Resource,
							ClaimRight = x.claim.Right
						})
				.ToArray();
		 }'
	{
		ShortString ClaimResource;
		ShortString ClaimRight;
		
		RepositoryMember SecurityClaims 'private static List<Rhetos.Security.Claim> _securityClaims = null;';
	}
}